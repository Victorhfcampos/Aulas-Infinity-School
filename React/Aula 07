.env --------------------

VITE_API_KEY=api_key=7fb6a5fdec0b9519193e4f57e16a2555
VITE_API=https://api.themoviedb.org/3/movie/
VITE_SEARCH=https://api.themoviedb.org/3/search/movie
VITE_IMG=https://image.tmdb.org/t/p/w500/

Index.css --------------

* {
    font-family: Helvetica;
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

body {
    background-color: #000;
    color: #fff;
}

a {
    text-decoration: none;
    color: #f7d354;
    transition: .5s;
}

a:hover {
    color: #b8930c;
}

----------- Movie.css 
.movie-page {
    color: #fff;
    display: flex;
    flex-direction: column;
    max-width: 600px;
    margin: 2rem auto;
}

.movie-page svg {
    font-size: 1.5rem;
    color: #f7d354;
}

.movie-page .movie-card {
    text-align: center;
}

.movie-page .movie-card img,
.movie-page .movie-card h2,
.movie-page .movie-card p {
    margin-bottom: 1rem;
}

.movie-page .movie-card h2 {
    font-size: 2rem;
}

.movie-page .movie-card p {
    display: flex;
    align-items: center;
    justify-self: center;
    gap: 0.4rem;
}

.tagline {
    text-align: center;
    font-size: 1.3rem;
    margin-bottom: 2rem;
}

.info {
    margin-bottom: 1.5rem;
}

.info h3 {
    margin-bottom: 1rem;
    display: flex;
    align-items: center;
    gap: .5rem;
}

.description {
    padding-bottom: 10rem;
}

.description p {
    line-height: 1.5rem;
}

-----------MoviesGrid.css 
.container .title {
    color: #fff;
    font-size: 2.5rem;
    text-align: center;
    margin: 2rem 0 1rem;
}

.title .query-text {
    color: #f7d354;

}

.movies-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    padding: 2rem;
    max-width: 1200px;
    margin: 0 auto;
}

.movies-container div {
    width: 30%;
    color: #fff;
    margin-bottom: 2.5rem;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    background-color: #111;
    padding: 1rem;
}

.movies-container div img {
    max-width: 100%;
}

.movies-container div img, 
.movies-container div p,
.movies-container div h2 {
    margin-bottom: 1rem;
}

.movies-container div svg {
    color: #f7d354;
}

.movies-container div a {
    background-color: #f7d354;
    border: 2px solid #f7d354;
    border-radius: 4px;
    color: #000;
    padding: 1rem 0.5rem;
    font-size: 1.3rem;
    text-align: center;
    transition: .4s;
    font-weight: bold;
}

.movies-container div a:hover {
    background-color: transparent;
    color: #f7d354;
}

--------------Navbar.css 

#navbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 2rem;
    background-color: #121212;
}

#navbar h2 a {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

#navbar form {
    display: flex;
    gap: .5rem;
}

#navbar input {
    padding: 0.2rem 0.8rem;
    border-radius: 4px;
    border: none;
}

#navbar form button {
    background-color: #f7d354;
    border: 2px solid #f7d354;
    border-radius: 4px;
    color: #000;
    padding: 0.3rem;
    font-size: 1.3rem;
    display: flex;
    align-items: center;
    cursor: pointer;
    transition: .4s;
}

#navbar form button:hover {
    background-color: transparent;
    color: #f7d354;
}

--------------MovieCard.jsx

import { Link } from "react-router-dom";
import { Fastar } from 'react-icons/fa';

const imgUrl = import.meta.env.VITE_IMG;

const MovieCard = ({movie, showLink = true}) => {
    return (
        <div className="movie-card">
            <img src={imgUrl + movie.poster_path} alt={movie.title} />
            <h2>{movie.title}</h2>
            <p>
                <Fastar /> {movie.vote_average} 
            </p>
            {showLink && <Link to={`movie/${movie.id}`}>Detalhes</Link>}
        </div>
    )
}
export default MovieCard;

--------------Home.jsx --------------

import "./Home.css";
import { useState, useEffect } from 'react';

import MovieCard from "../components/MovieCard";

// Pegando os dados do arquivo .env
const moviesUrl = import.meta.env.VITE_API;
const apiKey = import.meta.env.VITE_API_KEY;


const Home = () => {
    // Criando state que irá armazenar os filmes que virão da API
    const [movies, setMovies] = useState([]);

    // Função que irá resgatar os dados da API 
    const getMovies = async (url) => {
        // Realizando requisição na API com fetch
        const resposta = await fetch(url);
        // Convertendo os dados para json
        const dados = await resposta.json();
        
        // Armazenando os resultados em movies
        setMovies(dados.results);
    }

    // useEffect é responsável por executar a função getMovies()
    // Sempre que a página carregar
    useEffect(() => {
        // Montando a url de consulta na API
        const url = `${moviesUrl}top_rated?${apiKey}`;
        // Chamando a função e passando a url 
        getMovies(url);

    }, [])
    return (
        <div className="container">
            <h2 className="title">
                Melhores filmes: 
            </h2>
            <div className="movies-container">
                {movies.map((movie) => 
                    <MovieCard key={movie.id} movie={movie} />
                )}                
            </div>
        </div>
    );
};

export default Home;


------------ Navbar.jsx 

import { Link, useNavigate } from "react-router-dom";
import { useState } from "react";
import { BiCameraMovie, BiSearchAlt2 } from 'react-icons/bi';
import "./Navbar.css";

const Navbar = () => {
    const [search, setSearch] = useState("");
    const navigate = useNavigate();

    // Criando função de submit do formulário
    const handleSubmit = (e) => {
        e.preventDefault();

        // Verificando se algo foi digitado no campo de pesquisa
        if (!search) {
            return;
        }
        navigate(`/search?filme=${search}`);
        setSearch("");
    };
    return (
        <nav id="navbar">
            <h2>
                <BiCameraMovie />
                <Link to="/">
                    Infiniflix
                </Link>
            </h2>
            <form onSubmit={handleSubmit}>
                <input type="text" placeholder="Busque um filme"
                    onChange={(e) => setSearch(e.target.value)}
                    value={search}
                />
                <button type="submit">
                    <BiSearchAlt2 />
                </button>
            </form>
        </nav>
    );
};
export default Navbar;

----------------------------------App.jsx 
import './App.css';
import { BrowserRouter, Routes, Route } from 'react-router-dom';
// Pages 
import Home from './pages/Home';
import Navbar from './components/Navbar';
import Search from './pages/Search';
import Movie from './pages/Movie';

function App() {


  return (
    <BrowserRouter>
      <Navbar />

      <Routes>
        <Route path="/" element={<Home />} />
        <Route path="/search" element={<Search />} />
        <Route path="/movie/:id" element={<Movie />} />
      </Routes>
    </BrowserRouter>
  );
}

export default App;


-------------- Search.jsx

import "./Home.css";
import { useState, useEffect } from 'react';
import MovieCard from "../components/MovieCard";
import { useSearchParams } from "react-router-dom";

// Pegando os dados do arquivo .env
const searchUrl = import.meta.env.VITE_SEARCH;
const apiKey = import.meta.env.VITE_API_KEY;


const Search = () => {
    // Criando state que irá armazenar os filmes que virão da API
    const [movies, setMovies] = useState([]);

    const [searchParams] = useSearchParams();
    const filme = searchParams.get("filme");



    // Função que irá resgatar os dados da API 
    const getMovies = async (url) => {
        // Realizando requisição na API com fetch
        const resposta = await fetch(url);
        // Convertendo os dados para json
        const dados = await resposta.json();
        
        // Armazenando os resultados em movies
        setMovies(dados.results);
    }

    // useEffect é responsável por executar a função getMovies()
    // Sempre que a página carregar
    useEffect(() => {
        // Montando a url de consulta na API
        const url = `${searchUrl}?${apiKey}&query=${filme}`;
        // Chamando a função e passando a url 
        getMovies(url);

    }, [])
    return (
        <div className="container">
            <h2 className="title">
                Resultados para: {filme}
            </h2>
            <div className="movies-container">
                {movies.map((movie) => 
                    <MovieCard key={movie.id} movie={movie} />
                )}                
            </div>
        </div>
    );
};

export default Search;

-------------- Navbar.jsx

import { Link, useNavigate } from "react-router-dom";
import { useState } from "react";
import { BiCameraMovie, BiSearchAlt2 } from 'react-icons/bi';
import "./Navbar.css";

const Navbar = () => {
    const [search, setSearch] = useState("");
    const navigate = useNavigate();

    // Criando função de submit do formulário
    const handleSubmit = (e) => {
        e.preventDefault();

        // Verificando se algo foi digitado no campo de pesquisa
        if (!search) {
            return;
        }
        navigate(`/search?filme=${search}`);
        setSearch("");
    };
    return (
        <nav id="navbar">
            <h2>
                <BiCameraMovie />
                <Link to="/">
                    Infiniflix
                </Link>
            </h2>
            <form onSubmit={handleSubmit}>
                <input type="text" placeholder="Busque um filme"
                    onChange={(e) => setSearch(e.target.value)}
                    value={search}
                />
                <button type="submit">
                    <BiSearchAlt2 />
                </button>
            </form>
        </nav>
    );
};
export default Navbar;

-------------------- Movie.jsx 

import { useState, useEffect } from "react";
import {
    BsGraphUp,
    BsWallet2,
    BsHourglassSplit,
    BsFillFileEarmarkTextFill
} from 'react-icons/bs';
import MovieCard from "../components/MovieCard";
import './Movie.css';

import { useParams } from "react-router-dom";

const movieUrl = import.meta.env.VITE_API;
const apiKey = import.meta.env.VITE_API_KEY;
const Movie = () => {
    // Pegando o :id que está sendo passado na rota 
    const { id } = useParams();
    // Criando o estado que irá armazenar o filme buscado na API
    const [movie, setMovie] = useState(null);

    // Função que irá realizar requisição na API
    // Recebe uma url por parametro
    const getMovie = async (url) => {
        const resposta = await fetch(url);
        const filme = await resposta.json();
        setMovie(filme);
    }

    // Montando a url e chamando a função
    useEffect(() => {
        const url = `${movieUrl}${id}?${apiKey}`;
        getMovie(url);
    }, [])

    return (
        <div className="movie-page">
            {movie && 
                <>
                    <MovieCard movie={movie} showLink={false} />
                    <div className="info">
                        <h3>
                            <BsWallet2 /> Orçamento: 
                        </h3>
                        <p>{movie.budget}</p>
                    </div>

                    <div className="info">
                        <h3>
                            <BsGraphUp /> Receita: 
                        </h3>
                        <p>{movie.revenue}</p>
                    </div>

                    <div className="info">
                        <h3>
                            <BsHourglassSplit /> Duração 
                        </h3>
                        <p>{movie.runtime} minutos</p>
                    </div>

                    <div className="info description">
                        <h3>
                            <BsFillFileEarmarkTextFill /> Descrição:
                        </h3>
                        <p>{movie.overview}</p>
                    </div>
                </>
            }
        </div>
    );
};

export default Movie; 

--------------------------------------------
